// src/components/ARLotteryView.js
import React, { useState, useEffect, useRef } from "react";
import { useParams, useNavigate } from "react-router-dom";
import { supabase } from "../supabaseClient";
import { ClipLoader } from "react-spinners";
// –î–ª—è Three.js –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å npm install three
// –ò–º–ø–æ—Ä—Ç ARButton –º–æ–∂–µ—Ç –≤—ã–∑–≤–∞—Ç—å –æ—à–∏–±–∫—É, –µ—Å–ª–∏ Three.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
// import { ARButton } from 'three/examples/jsm/webxr/ARButton.js';

const ARLotteryView = () => {
  const { id } = useParams();
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [ticket, setTicket] = useState(null);
  const [arStarted, setArStarted] = useState(false);
  
  const containerRef = useRef(null);
  const sceneRef = useRef(null);
  const rendererRef = useRef(null);
  const cameraRef = useRef(null);
  const navigate = useNavigate();

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –±–∏–ª–µ—Ç–∞
  useEffect(() => {
    const fetchTicket = async () => {
      setLoading(true);
      try {
        const { data, error } = await supabase
          .from("ar_lottery_tickets")
          .select("*")
          .eq("id", id)
          .single();

        if (error) throw error;
        setTicket(data);

        // –û—Ç–º–µ—á–∞–µ–º –±–∏–ª–µ—Ç –∫–∞–∫ –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–π
        if (!data.viewed) {
          await supabase
            .from("ar_lottery_tickets")
            .update({ viewed: true })
            .eq("id", id);
        }
      } catch (err) {
        console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∏–ª–µ—Ç–∞:", err);
        setError(err.message);
      } finally {
        setLoading(false);
      }
    };

    fetchTicket();
  }, [id]);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AR —Å–µ—Å—Å–∏–∏ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)
  const initAR = () => {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ WebXR
    if (!('xr' in navigator)) {
      setError("WebXR –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤–∞—à–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∏ –±—Ä–∞—É–∑–µ—Ä.");
      return;
    }

    alert("–í —ç—Ç–æ–π –¥–µ–º–æ-–≤–µ—Ä—Å–∏–∏ –ø–æ–ª–Ω–∞—è AR-—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç–∫–ª—é—á–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Three.js –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ WebXR.");
    
    // –í —Ä–µ–∞–ª—å–Ω–æ–º –∫–æ–¥–µ –∑–¥–µ—Å—å –±—ã–ª–∞ –±—ã –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Three.js –∏ WebXR
    setArStarted(true);
  };

  // –≠—Ñ—Ñ–µ–∫—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ AR —Å—Ü–µ–Ω—ã
  useEffect(() => {
    if (!ticket || !containerRef.current || arStarted) return;
    
    // –ú—ã –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AR –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–ª–∂–µ–Ω –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É
    
    return () => {
      // –ó–¥–µ—Å—å –∫–æ–¥ –æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤
    };
  }, [ticket, arStarted]);

  if (loading) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-100">
        <ClipLoader size={40} color="#000" />
      </div>
    );
  }

  if (error) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-100">
        <div className="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
          <h2 className="text-2xl font-bold text-black mb-4 text-center">
            –û—à–∏–±–∫–∞
          </h2>
          <p className="text-red-600 text-center">{error}</p>
          <button
            onClick={() => navigate("/dashboard")}
            className="mt-4 w-full py-2 px-4 bg-yellow-500 text-black font-semibold rounded-md hover:bg-yellow-600"
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </div>
      </div>
    );
  }

  if (!ticket) {
    return (
      <div className="min-h-screen flex items-center justify-center bg-gray-100">
        <div className="bg-white p-8 rounded-lg shadow-md w-full max-w-md">
          <h2 className="text-2xl font-bold text-black mb-4 text-center">
            –ë–∏–ª–µ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
          </h2>
          <p className="text-gray-700 text-center">
            –ë–∏–ª–µ—Ç AR –ª–æ—Ç–µ—Ä–µ–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –±—ã–ª —É–¥–∞–ª–µ–Ω.
          </p>
          <button
            onClick={() => navigate("/dashboard")}
            className="mt-4 w-full py-2 px-4 bg-yellow-500 text-black font-semibold rounded-md hover:bg-yellow-600"
          >
            –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="h-screen relative">
      {/* AR –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */}
      <div ref={containerRef} className="absolute inset-0 bg-black">
        {/* –ü–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä –¥–ª—è AR –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */}
        {arStarted ? (
          <div className="flex items-center justify-center h-full text-white">
            <div className="text-center p-8 bg-black bg-opacity-70 rounded-lg">
              <h2 className="text-xl font-bold mb-4">AR –†–µ–∂–∏–º –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω</h2>
              <p>
                {ticket.is_win 
                  ? `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${ticket.win_amount} ‚ÇΩ` 
                  : "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏ –≤ —ç—Ç–æ—Ç —Ä–∞–∑"}
              </p>
              <div className="mt-4">
                {ticket.is_win ? (
                  <div className="text-6xl mb-2">üí∞</div>
                ) : (
                  <div className="text-6xl mb-2">üì¶</div>
                )}
              </div>
              <p className="text-sm mt-4">
                –î–ª—è –ø–æ–ª–Ω–æ–π AR-—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Ç—Ä–µ–±—É–µ—Ç—Å—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Three.js –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ WebXR.
              </p>
            </div>
          </div>
        ) : (
          <div className="flex items-center justify-center h-full">
            <div className="text-center text-white">
              <h2 className="text-2xl font-bold mb-6">–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –ª–æ—Ç–µ—Ä–µ–∏</h2>
              <p className="mb-8">
                {ticket.is_win 
                  ? `–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ ${ticket.win_amount} ‚ÇΩ` 
                  : "–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –Ω–µ –≤—ã–∏–≥—Ä–∞–ª–∏ –≤ —ç—Ç–æ—Ç —Ä–∞–∑"}
              </p>
              <button
                onClick={initAR}
                className="px-6 py-3 bg-yellow-500 text-black font-bold rounded-lg hover:bg-yellow-600"
              >
                –ó–∞–ø—É—Å—Ç–∏—Ç—å AR –ø—Ä–æ—Å–º–æ—Ç—Ä
              </button>
            </div>
          </div>
        )}
      </div>
      
      {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ (–≤–∏–¥–Ω–∞ —Ç–æ–ª—å–∫–æ –¥–æ –Ω–∞—á–∞–ª–∞ AR) */}
      {!arStarted && (
        <div className="absolute top-4 left-4">
          <button
            onClick={() => navigate("/dashboard")}
            className="p-2 bg-yellow-500 text-black rounded-full shadow-lg"
          >
            <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M10 19l-7-7m0 0l7-7m-7 7h18" />
            </svg>
          </button>
        </div>
      )}
    </div>
  );
};

export default ARLotteryView;